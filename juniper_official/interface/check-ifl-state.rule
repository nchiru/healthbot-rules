/*
 * Monitors sub interfaces state and notifies when anomalies are found.
 * EOP requirements - REQ-33->REQ-454 and REQ-455
 * Two inputs control detection
 *
 *   1) ifd-name, is a regular expression that matches the interfaces
 *      that you would like to monitor.  By default it's '.*', which matches
 *      all interfaces. Use something like 'ge.*' to match only gigabit
 *      ethernet interfaces. 
 *
 *   2) ifl-no, is a regular expression that matches the IFL index number that
 *      you would like to monitor.  By default it's '.*', which matches all
 *      interfaces. Use something like '0-10*' to match only 0 to 10 IFLs.
 *
 */
healthbot {
    topic interfaces {
        rule check-ifl-state {
            synopsis "IFL state analyzer.";
            description "Collects IFL stats and notifies anomaly when the IFL operational state is down.";
            /*
             * Monitors the interface state. If ifl operational state is down 
             * red alarm is shown else it is green. 
             *
             * Use interface and sub-interface name as keys for rule.
             */
            keys [interface-name sub-interface-index];
            /*
             * Sensor configuration to get data from network devices.
             */
            sensor interfaces-oc {
                synopsis "Sub Interface open-config sensor definition";
                description "Sub Interfaces open-config sensor to collect telemetry data from network device";
                open-config {
                    sensor-name /interfaces/interface/subinterfaces/subinterface/state;
                    frequency 60s;
                }
            }
            /*
             * Fields defined using sensor path. Map the longer sensor names
             * to the shorter field names used in the rules.
             */
			field interface-name {
                sensor interfaces-oc {
                    where "/interfaces/interface/@name =~ /{{ifd-name}}/";
                    path "/interfaces/interface/@name";
                }
                type string;
                description "Interfaces to be monitored";
            }
            field sub-interface-index {
                sensor interfaces-oc {
                    where "/interfaces/interface/subinterfaces/subinterface/@index =~ /{{ifl-no}}/";
                    path "/interfaces/interface/subinterfaces/subinterface/@index";
                }
                type string;
                description "Interfaces to be monitored";
            }
            field ifl-oper-status {
                sensor interfaces-oc {
                    path /interfaces/interface/subinterfaces/subinterface/state/oper-status;
                }
                type string;
                description "Subinterface operational status";
                enumerate UP as 1;
                enumerate DOWN as 0;
                enumerate TESTING as -1;
                enumerate UNKNOWN as -2;
                enumerate DORMANT as -3;
                enumerate NOT_PRESENT as -4;
                enumerate LOWER_LAYER_DOWN as -5;
            }
            field in-octets {
                sensor interfaces-oc {
                    path /interfaces/interface/subinterfaces/subinterface/state/counters/in-octets;
                }
                type integer;
                description "Subinterface(IFL) statistics counter (in-octets) value";
            }
            field in-util {
                formula {
                    eval {
                        expression "($in-mbps / $in-bandwidth) * 100";
                    }
                }
                type float;
                description "Utilization in percentage which derived based on mbps and interface in bw";
            }
            field in-mbps {
                formula {
                    rate-of-change {
                        field-name "$in-octets";
                        multiplication-factor 0.000008;
                    }
                }
                type float;
                description "Derives mbps based (current in-octets - previous in-octets) divided by (current time - previous time) divided by mbps multiplication factor";
            }
            field out-octets {
                sensor interfaces-oc {
                    path /interfaces/interface/subinterfaces/subinterface/state/counters/out-octets;
                    zero-suppression;
                }
                type integer;
                description "Subinterface(IFL) statistics counter (out-octets) value";
            }
            field out-util {
                formula {
                    eval {
                        expression "($out-mbps / $out-bandwidth) * 100";
                    }
                }
                type float;
                description "Utilization out percentage which derived based on mbps and interface out bw";
            }
            field out-mbps {
                formula {
                    rate-of-change {
                        field-name "$out-octets";
                        multiplication-factor 0.000008;
                    }
                }
                type float;
                description "Derives mbps based (current out-octets - previous out-octets) divided by (current time - previous time) divided by mbps multiplication factor";
            }
            field high-threshold {
                constant {
                    value "{{traffic-high-threshold}}";
                }
                type integer;
                description "Traffic high threshold";
            }
            field low-threshold {
                constant {
                    value "{{traffic-low-threshold}}";
                }
                type integer;
                description "Traffic low threshold";
            }
            field in-bandwidth {
                constant {
                    value "{{in-bandwidth }}";
                }
                type integer;
                description "Subinterface input bandwidth";
            }
            field out-bandwidth {
                constant {
                    value "{{out-bandwidth}}";
                }
                type integer;
                description "Subinterface output bandwidth";
            }     
            /*
             * Anomaly detection logic.
             */
            trigger sub-interface-link-state {
                synopsis "Sub-interface status check kpi";
                description "Sets health based on ifl state";
                frequency 1offset;
                /*
                 * Sets color to green when link state is UP
                 */			
                term is-ifl-up{
                    when {
                        matches-with "$ifl-oper-status" UP;
                    }
                    then {
                        status {
                            color green;
                            message "$interface-name.$sub-interface-index status $ifl-oper-status";
                        }
                    }
                }
                /*
                 * Defaults color to red.
                 */				
                term ifl-up {
                	when {
                        does-not-match-with "$ifl-oper-status" UP {
                            ignore-case;
                        }
                    }
                    then {
                        status {
                            color red;
                            message "$interface-name.$sub-interface-index status $ifl-oper-status";
                        }
                    }
                }
            }
            trigger sub-nterface-input-traffic {
                alert-type interfaces.rx.traffic.interface-input-traffic;
                synopsis "Sub interface input traffic kpi";
                description "Sets health based on input traffic exceed threshold";
                frequency 1offset;
                /*
                 * Sets color to green when in-util is below low-threshold
                 */				
                term interface-in-traffic-normal {
                    when {
                        less-than "$in-util" "$low-threshold";
                    }				
                    then {
                        status {
                            color green;
                            message "$interface-name.$sub-interface-index input traffic is $in-mbps mbps, utilization:$in-util % is normal";
                        }
                    }
                }				
                /*
                 * Sets color to yellow and sends out an anomaly notification
                 * when the IFL input traffic($in-util) is
                 * above low threshold (low-threshold)
                 */					
                term is-ifl-in-traffic-median {
                    when {
                        greater-than-or-equal-to "$in-util" "$low-threshold";
                        less-than "$in-util" "$high-threshold";
                    }
                    then {
                        status {
                            color yellow;
                            message "$interface-name.$sub-interface-index input traffic is $in-mbps mbps, utilization:$in-util % exceeds low threshold";
                        }
                    }
                }
                /*
                 * Sets color to red and sends out an anomaly notification
                 * when the interface input traffic ($in-util) is
                 * above high threshold (high-threshold)
                 */				
                term is-ifl-in-traffic-abnormal {
                    when {
                        greater-than-or-equal-to "$in-util" "$high-threshold";
                    }
                    then {
                        status {
                            color red;
                            message "$interface-name.$sub-interface-index input traffic is $in-mbps mbps, utilization:$in-util % exceeds high threshold";
                        }
                    }
                }
            }
            trigger sub-nterface-output-traffic {
                alert-type interfaces.tx.traffic.interface-output-traffic;
                synopsis "Subinterface output traffic kpi";
                description "Sets health based on output traffic exceed threshold";
                frequency 1offset;
                /*
                 * Sets color to green when out-util is below low threshold
                 */ 				
                term is-ifl-stats-normal {
                    when {
                        less-than "$out-util" "$low-threshold";
                    }				
                    then {
                        status {
                            color green;
                            message "$interface-name.$sub-interface-index output traffic is $out-mbps mbps, utilization:$out-util % is normal";
                        }
                    }
                }				
                /*
                 * Sets color to yellow and sends out an anomaly notification
                 * when the subinterface output traffic ($out-util)
                 * is above low threshold (low-threshold)
                 */				
                term is-ifl-stats-median {
                    when {
                        greater-than-or-equal-to "$out-util" "$low-threshold";
                        less-than "$out-util" "$high-threshold";
                    }
                    then {
                        status {
                            color yellow;
                            message "$interface-name.$sub-interface-index output traffic is $out-mbps mbps, utilization:$out-util % exceeds low threshold";
                        }
                    }
                }
                /*
                 * Sets color to red and sends out an anomaly notification when
                 * the interface output traffic ($out-util) is
                 * above high threshold (high-threshold)
                 */ 				
                term is-ifl-stats-abnormal {
                    when {
                        greater-than-or-equal-to "$out-util" "$high-threshold";
                    }
                    then {
                        status {
                            color red;
                            message "$interface-name.$sub-interface-index output traffic is $out-mbps mbps, utilization:$out-util % exceeds high threshold";
                        }
                    }
                }				
            }		
            variable ifd-name {
                value ".*";
                description "Interfaces to be monitored, regular expression, eg 'ge-.*'";
                type string;
            }
            variable ifl-no {
                value ".*";
                description "Sub interfaces index to be monitored, regular expression, eg '0-10'";
                type string;
            }
            variable traffic-high-threshold {
                value 80;
                description "Subinterface traffic high threshold value in percentage";
                type int;
            }
            variable traffic-low-threshold {
                value 50;
                description "Subinterface traffic high threshold value in percentage";
                type int;
            }
            variable out-bandwidth {
                value 512;
                description "Subinterface output bandwidth";
                type int;
            }
            variable in-bandwidth {
                value 1024;
                description "Subinterface input bandwidth";
                type int;
            }
            rule-properties {
                version 1;
                contributor juniper;
                category basic;
                is-scaling-rule {
                    description "Fields: interface-name ; Directly impacted by number of interfaces and IFLs in each network device";
                }				
                supported-healthbot-version 4.2.0;
                supported-devices {
                    juniper {
                        operating-system junos {
                            products MX {
                                platforms MX204 {
                                    releases 22.2R3 {
                                        release-support min-supported-release;
                                    }
                                }
                                platforms MX240 {
                                    releases 22.2R3 {
                                        release-support min-supported-release;
                                    }
                                }								
                                platforms MX304 {
                                    releases 22.2R3 {
                                        release-support min-supported-release;
                                    }
                                }
                                platforms MX480 {
                                    releases 22.2R3 {
                                        release-support min-supported-release;
                                    }
                                }
                                platforms MX960 {
                                    releases 22.2R3 {
                                        release-support min-supported-release;
                                    }
                                }								
                                platforms MX10004 {
                                    releases 22.3R1 {
                                        release-support min-supported-release;
                                    }
                                }
                                platforms MX10008 {
                                    releases 22.3R1 {
                                        release-support min-supported-release;
                                    }
                                }
                                platforms MX10016 {
                                    releases 22.3R1 {
                                        release-support min-supported-release;
                                    }
                                }								
                            }
                        }
                        operating-system junosEvolved {
                            products ACX {
                                platforms ACX7024 {
                                    releases 22.3R1 {
                                        release-support min-supported-release;
                                    }
                                }
                                platforms ACX7024X {
                                    releases 22.3R1 {
                                        release-support min-supported-release;
                                    }
                                }
                                platforms ACX7100 {
                                    releases 22.3R1 {
                                        release-support min-supported-release;
                                    }
                                }
                                platforms ACX7509 {
                                    releases 22.3R1 {
                                        release-support min-supported-release;
                                    }
                                }
                                platforms ACX7348 {
                                    releases 22.3R1 {
                                        release-support min-supported-release;
                                    }
                                }								
                            }
                        }						
                    }
                }
            }
    	}	
    }
}