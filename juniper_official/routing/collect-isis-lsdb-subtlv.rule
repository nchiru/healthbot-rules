/*
 * Collects ISIS LSDB data for prefix-sid value till sub-TLV
 */
 healthbot {
    topic routing.isis {
        rule collect-isis-lsdb-subtlv {
            keys [ instance-name protocol-name level-num lsp-id tlv-value ipv4-ext-prefix subtlv-value ];
            synopsis "collects ISIS prefix-sid-state-value for each of prefixes";
            description "Collects LSDB path periodically till subtlv-value node as key";
            sensor isis-oc {
            	synopsis "ISIS open-config sensor definition";
                description "Open-config sensor to collect telemetry data from network device";
                open-config {
                    sensor-name /network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/;
                    frequency 60s;
                }
            }			
            field instance-name {
                sensor isis-oc {
                    where "/network-instances/network-instance/@name =~ /{{inst-name}}/";
                    path "/network-instances/network-instance/@name";
                }			
                type string;
                description "instance-name from the lsdb path";
            }
            field protocol-name {
                sensor isis-oc {
                    where "/network-instances/network-instance/protocols/protocol/@identifier=~/{{proto-name}}/";
                    path "/network-instances/network-instance/protocols/protocol/@identifier";
                }			
                type string;
                description "protocol-name from the lsdb path";
            }
            field level-num {
                sensor isis-oc {
                    where "/network-instances/network-instance/protocols/protocol/isis/levels/level/@level-number=~/{{level-numb}}/";
                    path "/network-instances/network-instance/protocols/protocol/isis/levels/level/@level-number";
                }
                type string;
                description "level-number from the lsdb path";
            }
            field tlv-value {
                sensor isis-oc {
                    where "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/@type=~/{{tlv-val}}/";
                    path "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/@type";
                }
                type string;
                description "tlv-type from the lsdb path";
            }
            field subtlv-value {
                sensor isis-oc {
                    where "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/@type=~/{{subtlv-val}}/";
                    path "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/@type";
                }
                type string;
                description "subtlv-type from the lsdb path";
            }
            field lsp-id {
                sensor isis-oc {
                    path "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/@lsp-id";
                }
                type string;
                description "lsp-id from the lsdb path";
            }
            field ipv4-ext-prefix {
                sensor isis-oc {
                    path "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/state/prefix";
                }
                type string;
                description "ipv4-ext-prefix from lsdb path";
            }
            field prefix-sid-state-value {
                sensor isis-oc {
                    path "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/value";
                }
                type string;
                description "prefix-sid-state-value from lsdb path";
            }
            variable inst-name {
                value .*;
                description "Enter a regular expression to match the instance name, e.g., 'master|RI1'";
                type string;
            }
            variable proto-name {
                value .*;
                description "Enter a regular expression to match the protocol name, e.g., 'isis' or 'ospf'";
                type string;
            }
            variable level-numb {
                value .*;
                description "Enter a regular expression to match the level number, e.g., '1', '2', or '3'";
                type string;
            }
            variable tlv-val {
                value .*;
                description "Enter a regular expression to match the TLV value";
                type string;
            }
            variable subtlv-val {
                value .*;
                description "Enter a regular expression to match the Sub-TLV value";
                type string;
            }
            rule-properties {
                version 1;
                contributor juniper;
                supported-healthbot-version 4.3.0;
                supported-devices {
                    juniper {
                        operating-system junos {
                            products MX {
                                platforms MX960 {
                                    releases 22.2R3 {
                                        release-support min-supported-release;
                                    }
                                }					
                            }
                        }
                    }
                }
            }
        }
    }
}